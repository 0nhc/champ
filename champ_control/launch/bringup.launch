<launch>
    <!-- Start ROS communication between the robot's computer and base -->
    <arg name="sim" default="false" />
    <arg name="gazebo" default="false" />

    <node pkg="rosserial_python" name="rosserial_champ" type="serial_node.py" output="screen">
        <param if="$(arg sim)" name="port" value="/tmp/simavr-uart0" />
        <param unless="$(arg sim)" name="port" value="/dev/ttyACM0" />
        <param if="$(arg sim)" name="fix_pyserial_for_test" value="true" />
        <param unless="$(arg sim)" name="fix_pyserial_for_test" value="false" />
        <param name="baud" value="115200" />
        <!-- <remap from="champ/cmd_vel" to="cmd_vel" /> -->
    </node>

    <include file="$(find champ_control)/launch/include/velocity_smoother.launch" />

    <include file="$(find champ_description)/launch/description.launch" />

    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"> 
        <remap from="odometry/filtered" to="odom" />
        <rosparam command="load" file="$(find champ_control)/config/ekf/ekf.yaml" />
    </node>

    <node pkg="champ_control" name="pose_relay" type="pose_relay.py" output="screen"/>
    <node pkg="champ_control" name="foot_relay" type="foot_relay.py" output="screen"/>
    <group unless="$(arg gazebo)">
        <node pkg="champ_control" name="joints_relay" type="joints_relay.py" output="screen">
            <rosparam command="load" file="$(find champ_control)/config/joints_map/joints.yaml" />
        </node>
    </group>
</launch>