<launch>
    <!-- Start ROS communication between the robot's computer and base -->
    <arg name="sim" default="false" />

    <node pkg="rosserial_python" name="rosserial_champ" type="serial_node.py" output="screen">
        <param if="$(arg sim)" name="port" value="/tmp/simavr-uart0" />
        <param unless="$(arg sim)" name="port" value="/dev/ttyACM0" />
        <param if="$(arg sim)" name="fix_pyserial_for_test" value="true" />
        <param unless="$(arg sim)" name="fix_pyserial_for_test" value="false" />
        <param name="baud" value="115200" />
    </node>

    <node pkg="champ_control" name="foot_relay" type="foot_relay.py" output="screen"/>
    <node pkg="champ_control" name="joints_relay" type="joints_relay.py" output="screen"/>
    <node pkg="champ_control" name="pose_relay" type="pose_relay.py" output="screen"/>

    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find champ_description)/urdf/champ.urdf.xacro' " />
    <node name="champ_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <param name="publish_frequency" type="double" value="100.0" />
        <param name="ignore_timestamp" type="bool" value="false" />
        <remap from="/joint_states" to="/champ/joint_states/relay" />
    </node>

    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"> 
        <remap from="odometry/filtered" to="odom" />
        <rosparam command="load" file="$(find champ_control)/config/ekf/ekf.yaml" />
    </node>
</launch>